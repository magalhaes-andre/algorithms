import java.util.Arrays;
//
//        Your company is analyzing malware software which targets numerical record files.
//        The malware checks the value of each record and the values of some of its neighbors. The record is replaced by 0 when it is smaller or equal to either of those neighbors.
//        For each number it matches the following patter, where position 'X', is compared to positions 'T':
//        T, _, _, X, _, _, _, T
//        Positions '_' represent neighbors that are ignored. Positions further beyond the T's to the far left or far right are also ignored.
//        If the 'X' position is near the left or right border and has no 'T' position neighbor, only one side is considered.
//        Malware finds all positions first and only then sets them to 0. for example, if the values in a record file are the following:
//        [19, 2, 0, 87, 1, 40, 80, 77, 77, 77, 77 ]
//        the expected values after malware are:
//        [19, 0, 0, 87, 0, 0, 0, 77, 77, 0, 0]

public class MalwareAnalysis {
    public static int[] simulate(int[] entries) {
        int[] processedArray = new int[entries.length];
        int leftPattern = 3;
        int rightPattern = 4;

        for (int iterator = 0; iterator < entries.length; iterator++) {
            int currentPosition = entries[iterator];
            if (iterator - leftPattern >= 0) {
                if (currentPosition <= entries[iterator - leftPattern]) {
                    processedArray[iterator] = 0;
                } else {
                    processedArray[iterator] = currentPosition;
                }
            }

            if (iterator + rightPattern <= entries.length - 1) {
                if (currentPosition <= entries[iterator + rightPattern]) {
                    processedArray[iterator] = 0;
                } else {
                    processedArray[iterator] = currentPosition;
                }
            }
        }

        return processedArray;
    }

    public static void main(String[] args) {
        int[] records = { 1, 2, 0, 5, 0, 2, 4, 3, 3, 3 };
        System.out.println(Arrays.toString(simulate(records)));
        // Expected output:
        // 1, 0, 0, 5, 0, 0, 0, 3, 3, 0
    }
}